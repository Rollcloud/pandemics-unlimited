@use "cirrus";
@use "icons";

#map-container {
  position: relative; /* this allows the child elements to be positioned absolutely */

  height: 50vw;
  width: 100vw;

  overflow: hidden;
}

.map-layer {
  position: absolute;
  top: 0;
  left: 0;

  height: 50vw;
  width: 100vw;

  pointer-events: none;
}

// allow all children of .map-layer listen to pointer events
.map-layer > * {
  pointer-events: auto;
}

#map-countries {
  overflow-x: hidden;

  svg {
    height: 50vw;
    width: 100vw;

    margin-left: 2.8vw; // the country map is not centered in the svg
  }

  .mapborder {
    stroke: none;
  }

  .seabase {
    fill: none;
    stroke: none;
  }

  .region {
    stroke: #222;
    stroke-width: 2;
    fill: #ddd;
  }

  .region:hover {
    stroke: rgb(32, 95, 230);
    stroke-width: 4;
  }

  $bacon-colour: rgb(153, 23, 23);
  // highlight regions in shades of bacon-colour based on the value of data-bacon
  @for $i from 0 through 100 {
    &.show-bacon .region[data-bacon="#{$i}"] {
      fill: mix($bacon-colour, #ddd, $i * 1%);
    }
  }

  $smile-colour: #f80;
  // highlight regions in shades of smile-colour based on the value of data-smile
  @for $i from 0 through 100 {
    &.show-smiles .region[data-smile="#{$i}"] {
      fill: mix($smile-colour, #ddd, $i * 1%);
    }
  }
}

#map-airports {
  .airport {
    @extend .airport-icon;
    position: absolute;

    background-color: #222;
    border-radius: 50%;
    border: solid 2px #ddd;

    width: 1em;
    height: 1em;
    margin-left: -0.5em;
    margin-top: -0.5em;
  }

  .airport[data-size="large"] {
    font-size: 1.2em;
  }
  .airport:hover {
    @extend .u-z-40;
    font-size: 1.6em;
  }
  .airport[data-size="large"]:hover {
    @extend .airport, :hover;
    font-size: 2em;
  }
}

#map-vehicles {
  .vehicle {
    position: absolute;
    width: 2em;
    height: 2em;
    margin-left: -1em;
    margin-top: -1em;
  }

  .plane {
    @extend .plane-icon;

    filter: drop-shadow(1px 1px 2px #222); // (x-offset, y-offset, blur, color)
  }
}
